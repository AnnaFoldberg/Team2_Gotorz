@page "/booking/request-confirmation/{BookingReference}"
@using Gotorz.Client.Components
@using Gotorz.Shared.DTOs
@using Gotorz.Client.Services
@using Microsoft.AspNetCore.Authorization
@inject IUserService UserService
@inject IBookingService BookingService

<AuthorizeView>
    <Authorized Context="auth">
        @if (!isLoaded)
        {
          <p>Loading...</p>
        }
        else if (auth.User.IsInRole("customer"))
        {
          if (holidayBooking?.CustomerEmail == userEmail)
          {
            <div class="container d-flex flex-column request-confirmation-page-wrapper">
              <h3>Booking Request Confirmation</h3>
              <h6>Booking Reference: #@holidayBooking.BookingReference</h6>
              <br>
              <HolidayBooking HolidayBookingDto="@holidayBooking" />

              <div class="card mb-3" style="background-color: #d4edda;">
                <div class="card-body d-flex align-items-start">
                  <i class="bi bi-credit-card me-3" style="color: #218838; font-size: 1.5rem;"></i>
                  <p class="card-text mb-0">Please transfer the payment to IBAN XX7050518371227343
                    to proceed with your booking.</p>
                </div>
              </div>
              <div>
                <p>Once we receive your payment, a travel agent will begin processing your booking.
                We will send you an email with your full travel details as soon as the reservation is confirmed.
                <b>This usually happens within 24 hours of receiving your payment.</b></p>
              </div>
            </div>
          }
          else
          {
            <p>Page not found.</p>
          }
        }
        else
        {
          <p>Page not found.</p>
        }
    </Authorized>
    <NotAuthorized>
        <div class="mt-5 standard-page-wrapper">
            <Login/>
        </div>
    </NotAuthorized>
</AuthorizeView>

@code {
    private bool isLoaded = false;
    private string? userEmail { get; set; }
    private HolidayBookingDto? holidayBooking;

    [Parameter]
    public string BookingReference { get; set; }

    protected override async Task OnInitializedAsync()
    {
      userEmail = await UserService.GetEmailAsync();
      holidayBooking = await BookingService.GetHolidayBookingAsync(BookingReference);
      isLoaded = true;
    }
}