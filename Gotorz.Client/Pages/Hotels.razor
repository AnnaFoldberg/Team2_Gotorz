@page "/hotels"
@using Gotorz.Shared.Models
@using System.ComponentModel.DataAnnotations
@using Gotorz.Client.Services
@inject IHotelService HotelService

<EditForm Model="@searchForm" OnValidSubmit="Search">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="container">
        <div class="d-flex gap-2 align-items-end">
            <div class="form-group flex-grow-1">
                <label for="country" class="form-label">Country</label>
                <InputText class="form-control" id="country" @bind-Value="searchForm.Country" />
            </div>
            <div class="form-group flex-grow-1">
                <label for="city" class="form-label">City</label>
                <InputText class="form-control" id="city" @bind-Value="searchForm.City" />
            </div>
            <div class="form-group flex-grow-1">
                <label for="arrivalDate" class="form-label">Arrival Date</label>
                <InputDate class="form-control" id="arrivalDate" @bind-Value="searchForm.ArrivalDate" />
            </div>
            <div class="form-group flex-grow-1">
                <label for="departureDate" class="form-label">Departure Date</label>
                <InputDate class="form-control" id="departureDate" @bind-Value="searchForm.DepartureDate" />
            </div>
            <div class="form-group flex-grow-1">
                <button type="submit" class="btn btn-primary">Search</button>
            </div>
        </div>
    </div>
</EditForm>

<br />

@if (!searchPerformed)
{
    <p class="text-muted">Start by entering a country and city, then click Search.</p>
}
else if (hotels == null)
{
    <p>Loading...</p>
}
else if (hotels.Any())
{
    <ul class="list-group">
        <li class="list-group-item d-flex justify-content-between align-items-center text-white bg-dark">
            <span class="col">Hotel</span>
            <span class="col">City</span>
            <span class="col">Rating</span>
            <span class="col">Map</span>
        </li>

        @foreach (var hotel in hotels)
        {
            <li class="list-group-item d-flex justify-content-between align-items-center">
                <span class="col">@hotel.Name</span>
                <span class="col">@hotel.Address</span>
                <span class="col">@hotel.Rating</span>
                <span class="col">
                    <a href="@hotel.GoogleMapsUrl" target="_blank">üìç View</a>
                </span>
            </li>
        }
    </ul>
}
else
{
    <h6>No hotels found.</h6>
}

@code {
    private SearchForm searchForm = new();
    private List<Hotel>? hotels;
    private bool searchPerformed = false;

    public class SearchForm
    {
        [Required(ErrorMessage = "Country is required.")]
        public string Country { get; set; } = string.Empty;

        [Required(ErrorMessage = "City is required.")]
        public string City { get; set; } = string.Empty;

        [Required(ErrorMessage = "Arrival date is required.")]
        public DateTime ArrivalDate { get; set; } = DateTime.Today;

        [Required(ErrorMessage = "Departure date is required.")]
        public DateTime DepartureDate { get; set; } = DateTime.Today.AddDays(1);
    }

    private async Task Search()
    {
        try
        {
            searchPerformed = true;
            hotels = null; // Set to null to trigger "Loading..." state
            hotels = await HotelService.GetHotelsByCityName(
                searchForm.City,
                searchForm.Country,
                searchForm.ArrivalDate,
                searchForm.DepartureDate
            );
        }
        catch (Exception ex)
        {
            Console.WriteLine($"üî• Error: {ex.Message}");
        }
    }
}