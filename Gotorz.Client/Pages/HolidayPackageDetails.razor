@page "/holidaypackage/{url}"
@using Gotorz.Client.Services
@using Gotorz.Shared.DTOs
@inject IBookingService BookingService
@inject IUserService UserService
@inject HolidayPackageService PackageService
@inject NavigationManager NavigationManager

@if (package == null)
{
    <div class="text-center mt-5">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
        <p class="mt-3">Loading holiday package...</p>
    </div>
}
else
{
    <div class="container mt-5">
        <div class="card shadow">
            <div class="card-body">
                <h2 class="card-title h4 mb-4">@package.Title</h2>

                <p class="card-text mb-3"><strong>Description:</strong> @package.Description</p>
                <p class="card-text mb-3"><strong>Max Capacity:</strong> @package.MaxCapacity</p>
                <p class="card-text mb-3"><strong>Price:</strong> @(package.CostPrice * (1 + package.MarkupPercentage)) DKK</p>

                <div class="d-flex justify-content-between align-items-center mt-3">
                    <button class="btn btn-secondary flex-fill me-2" @onclick="NavigateBack">
                        ← Back to list
                    </button>
                    <button class="btn btn-primary flex-fill ms-2" @onclick="BookHolidayAsync">
                        Book
                    </button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public string url { get; set; } = string.Empty;

    private HolidayPackageDto? package;
    private string? bookingReference;
    private UserDto user;

    protected override async Task OnInitializedAsync()
    {
        if (!string.IsNullOrWhiteSpace(url))
        {
            package = await PackageService.GetByUrlAsync(url);
        }
        user = await UserService.GetCurrentUserAsync();
    }

    private async Task BookHolidayAsync()
    {
        bookingReference = await BookingService.GetNextBookingReferenceAsync();
        HolidayBookingDto holidayBooking = new HolidayBookingDto
            {
                BookingReference = bookingReference,
                Customer = user,
                Status = 0,
                HolidayPackage = package
            };

        await BookingService.PostHolidayBookingAsync(holidayBooking);
        NavigationManager.NavigateTo($"/booking/travellers/{bookingReference}");
    }

    private void NavigateBack()
    {
        NavigationManager.NavigateTo("/holidaypackages");
    }
}

